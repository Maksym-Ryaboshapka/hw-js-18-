{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/layout.js","src/js/services/get-movies.js","src/js/services/add-movie.js","src/js/movie.js","src/js/modals/add-movie-modal.js","src/js/modals/modal.js","src/js/modals/edit-movie-modal.js","src/js/services/put-movie.js","src/js/delete-btn.js","src/js/services/delete-movie.js"],"sourcesContent":["// Render layout\nasync function $71b8d0ff64ca9fad$export$60e1c8f5f122c5ac() {\n    return await fetch(\"http://localhost:3000/movies\").then((res)=>res.json());\n}\n\n\nclass $164cf12502b3ee95$export$2e2bcd8739ae039 {\n    constructor(title, genre, director, year){\n        this.title = title;\n        this.genre = genre;\n        this.director = director;\n        this.year = year;\n    }\n}\n\n\nasync function $be4f266635b91511$export$2067da3b023cb800(title, genre, director, year) {\n    return await fetch(\"http://localhost:3000/movies\", {\n        method: \"POST\",\n        body: JSON.stringify(new (0, $164cf12502b3ee95$export$2e2bcd8739ae039)(title, genre, director, year)),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    }).then((res)=>res.json());\n}\n\n\nclass $45815515caeb23e1$export$2e2bcd8739ae039 {\n    constructor(modal){\n        this.modal = modal;\n    }\n    toggle() {\n        this.modal.classList.toggle(\"is-hidden\");\n        document.body.classList.toggle(\"no-scroll\");\n    }\n}\n\n\nconst $bcaef534012eab21$var$modalEl = document.querySelector(\".add-modal\");\nconst $bcaef534012eab21$export$442f3ee99c867c02 = new (0, $45815515caeb23e1$export$2e2bcd8739ae039)($bcaef534012eab21$var$modalEl);\nconst $bcaef534012eab21$var$openBtn = document.querySelector(\"#add-movie\");\n$bcaef534012eab21$var$openBtn.addEventListener(\"click\", ()=>$bcaef534012eab21$export$442f3ee99c867c02.toggle());\ndocument.addEventListener(\"keydown\", (e)=>{\n    if (!$bcaef534012eab21$export$442f3ee99c867c02.modal.classList.contains(\"is-hidden\") && e.code === \"Escape\") $bcaef534012eab21$export$442f3ee99c867c02.toggle();\n});\n\n\nclass $aa0bbffd1dda42a1$var$Page {\n    constructor(){\n        this.list = document.querySelector(\".movies\");\n    }\n    createMarkup(movie) {\n        const item = document.createElement(\"li\");\n        item.classList.add(\"movies__item\");\n        item.id = movie.id;\n        const title = document.createElement(\"h2\");\n        title.classList.add(\"movies__title\");\n        title.textContent = movie.title;\n        const genre = document.createElement(\"p\");\n        genre.classList.add(\"movies__genre\");\n        genre.textContent = movie.genre;\n        const director = document.createElement(\"p\");\n        director.classList.add(\"movies__director\");\n        director.textContent = movie.director;\n        const year = document.createElement(\"p\");\n        year.classList.add(\"movies__year\");\n        year.textContent = movie.year;\n        const editBtn = document.createElement(\"button\");\n        editBtn.textContent = \"Edit\";\n        editBtn.classList.add(\"edit-movie\");\n        editBtn.id = movie.id;\n        const deleteBtn = document.createElement(\"button\");\n        deleteBtn.textContent = \"Delete\";\n        deleteBtn.classList.add(\"delete-movie\");\n        deleteBtn.id = movie.id;\n        this.list.append(item);\n        item.append(title, genre, director, year, editBtn, deleteBtn);\n    }\n    async renderMovies() {\n        const moviesFromDB = await (0, $71b8d0ff64ca9fad$export$60e1c8f5f122c5ac)();\n        moviesFromDB.forEach((movie)=>{\n            this.createMarkup(movie);\n        });\n    }\n    async renderAddedMovie(title, genre, director, year) {\n        const currMovie = await (0, $be4f266635b91511$export$2067da3b023cb800)(title, genre, director, year);\n        (0, $bcaef534012eab21$export$442f3ee99c867c02).toggle();\n        this.createMarkup(currMovie);\n    }\n}\nconst $aa0bbffd1dda42a1$export$523fb3936f49e028 = new $aa0bbffd1dda42a1$var$Page();\n$aa0bbffd1dda42a1$export$523fb3936f49e028.renderMovies();\nconst $aa0bbffd1dda42a1$var$addForm = document.querySelector(\".add-form\");\n$aa0bbffd1dda42a1$var$addForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const target = e.target.children;\n    $aa0bbffd1dda42a1$export$523fb3936f49e028.renderAddedMovie(target.title.value, target.genre.value, target.director.value, target.year.value);\n});\n\n\n\n\n\nasync function $cc1158b52a3db820$export$7709ea6df55ed660(id, title, genre, director, year) {\n    return await fetch(`http://localhost:3000/movies/${id}`, {\n        method: \"PATCH\",\n        body: JSON.stringify(new (0, $164cf12502b3ee95$export$2e2bcd8739ae039)(title, genre, director, year)),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    }).then((res)=>res.json());\n}\n\n\n\nconst $5cb0d661f7770473$var$modalEl = document.querySelector(\".edit-modal\");\nconst $5cb0d661f7770473$export$568e0761fcbbe6a = new (0, $45815515caeb23e1$export$2e2bcd8739ae039)($5cb0d661f7770473$var$modalEl);\nfunction $5cb0d661f7770473$var$editingMovie(e) {\n    if (e.target.classList.contains(\"edit-movie\")) {\n        $5cb0d661f7770473$export$568e0761fcbbe6a.toggle();\n        const id = e.target.closest(\".movies__item\").id;\n        const editForm = document.querySelector(\".edit-form\");\n        editForm.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            const target = e.target.children;\n            const title = target.title.value;\n            const genre = target.genre.value;\n            const director = target.director.value;\n            const year = target.year.value;\n            if (title && genre && director && year) {\n                await (0, $cc1158b52a3db820$export$7709ea6df55ed660)(id, title, genre, director, year);\n                location.reload();\n            } else {\n                const moviesFromDB = await (0, $71b8d0ff64ca9fad$export$60e1c8f5f122c5ac)();\n                let currMovie;\n                moviesFromDB.forEach(async (el)=>{\n                    if (el.id === id) {\n                        currMovie = el;\n                        const updatedMovie = {\n                            title: title || currMovie.title,\n                            genre: genre || currMovie.genre,\n                            director: director || currMovie.director,\n                            year: year || currMovie.year\n                        };\n                        await (0, $cc1158b52a3db820$export$7709ea6df55ed660)(id, updatedMovie.title, updatedMovie.genre, updatedMovie.director, updatedMovie.year);\n                        location.reload();\n                    }\n                });\n            }\n        });\n    }\n}\ndocument.addEventListener(\"click\", $5cb0d661f7770473$var$editingMovie);\ndocument.addEventListener(\"keydown\", (e)=>{\n    if (!$5cb0d661f7770473$export$568e0761fcbbe6a.modal.classList.contains(\"is-hidden\") && e.code === \"Escape\") $5cb0d661f7770473$export$568e0761fcbbe6a.toggle();\n});\n\n\nasync function $f375d14ac7a319ac$export$730b1716cbcc3184(id) {\n    return await fetch(`http://localhost:3000/movies/${id}`, {\n        method: \"DELETE\"\n    }).then((res)=>res.json());\n}\n\n\nasync function $46680563607bf32a$var$deletingMovie(e) {\n    if (e.target.classList.contains(\"delete-movie\")) {\n        const id = e.target.closest(\".movies__item\").id;\n        await (0, $f375d14ac7a319ac$export$730b1716cbcc3184)(id);\n        location.reload();\n    }\n}\ndocument.addEventListener(\"click\", $46680563607bf32a$var$deletingMovie);\n\n\n\n\n//# sourceMappingURL=index.0952654a.js.map\n","// Render layout\r\n\r\nimport \"./layout\";\r\n\r\n// Modals\r\n\r\nimport \"./modals/add-movie-modal\";\r\nimport \"./modals/edit-movie-modal\";\r\nimport \"./delete-btn\";","import { getMovies } from \"./services/get-movies\";\r\nimport { addMovie } from \"./services/add-movie\";\r\nimport { addMovieModal } from \"./modals/add-movie-modal\";\r\n\r\nclass Page {\r\n  constructor() {\r\n    this.list = document.querySelector(\".movies\");\r\n  }\r\n\r\n  createMarkup(movie) {\r\n    const item = document.createElement(\"li\");\r\n    item.classList.add(\"movies__item\");\r\n    item.id = movie.id;\r\n\r\n    const title = document.createElement(\"h2\");\r\n    title.classList.add(\"movies__title\");\r\n    title.textContent = movie.title;\r\n\r\n    const genre = document.createElement(\"p\");\r\n    genre.classList.add(\"movies__genre\");\r\n    genre.textContent = movie.genre;\r\n\r\n    const director = document.createElement(\"p\");\r\n    director.classList.add(\"movies__director\");\r\n    director.textContent = movie.director;\r\n\r\n    const year = document.createElement(\"p\");\r\n    year.classList.add(\"movies__year\");\r\n    year.textContent = movie.year;\r\n\r\n    const editBtn = document.createElement(\"button\");\r\n    editBtn.textContent = \"Edit\";\r\n    editBtn.classList.add(\"edit-movie\");\r\n    editBtn.id = movie.id;\r\n\r\n    const deleteBtn = document.createElement(\"button\");\r\n    deleteBtn.textContent = \"Delete\";\r\n    deleteBtn.classList.add(\"delete-movie\");\r\n    deleteBtn.id = movie.id;\r\n\r\n    this.list.append(item);\r\n    item.append(title, genre, director, year, editBtn, deleteBtn);\r\n  }\r\n\r\n  async renderMovies() {\r\n    const moviesFromDB = await getMovies();\r\n\r\n    moviesFromDB.forEach((movie) => {\r\n      this.createMarkup(movie);\r\n    });\r\n  }\r\n\r\n  async renderAddedMovie(title, genre, director, year) {\r\n    const currMovie = await addMovie(title, genre, director, year);\r\n    \r\n    addMovieModal.toggle();\r\n    this.createMarkup(currMovie);\r\n  }\r\n}\r\n\r\nexport const page = new Page();\r\n\r\npage.renderMovies();\r\n\r\nconst addForm = document.querySelector(\".add-form\");\r\n\r\naddForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n\r\n  const target = e.target.children;\r\n\r\n  page.renderAddedMovie(\r\n    target.title.value,\r\n    target.genre.value,\r\n    target.director.value,\r\n    target.year.value\r\n  );\r\n});\r\n","export async function getMovies() {\r\n  return await fetch(\"http://localhost:3000/movies\").then((res) => res.json());\r\n}\r\n","import Movie from \"../movie\";\r\n\r\nexport async function addMovie(title, genre, director, year) {\r\n  return await fetch(\"http://localhost:3000/movies\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(new Movie(title, genre, director, year)),\r\n    headers: { \"Content-Type\": \"application/json; charset=UTF-8\" },\r\n  }).then((res) => res.json());\r\n}\r\n","export default class Movie {\r\n  constructor(title, genre, director, year) {\r\n    this.title = title;\r\n    this.genre = genre;\r\n    this.director = director;\r\n    this.year = year;\r\n  }\r\n}","import Modal from \"./modal.js\";\r\n\r\nconst modalEl = document.querySelector(\".add-modal\");\r\nexport const addMovieModal = new Modal(modalEl);\r\n\r\nconst openBtn = document.querySelector(\"#add-movie\");\r\n\r\nopenBtn.addEventListener(\"click\", () => addMovieModal.toggle());\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (\r\n    !addMovieModal.modal.classList.contains(\"is-hidden\") &&\r\n    e.code === \"Escape\"\r\n  ) {\r\n    addMovieModal.toggle();\r\n  }\r\n});\r\n","export default class Modal {\r\n  constructor(modal) {\r\n    this.modal = modal;\r\n  }\r\n\r\n  toggle() {\r\n    this.modal.classList.toggle(\"is-hidden\");\r\n    document.body.classList.toggle(\"no-scroll\");\r\n  }\r\n}","import Modal from \"./modal.js\";\r\nimport { putMovie } from \"../services/put-movie.js\";\r\nimport { getMovies } from \"../services/get-movies.js\";\r\n\r\nconst modalEl = document.querySelector(\".edit-modal\");\r\nexport const editMovieModal = new Modal(modalEl);\r\n\r\nfunction editingMovie(e) {\r\n  if (e.target.classList.contains(\"edit-movie\")) {\r\n    editMovieModal.toggle();\r\n\r\n    const id = e.target.closest(\".movies__item\").id;\r\n\r\n    const editForm = document.querySelector(\".edit-form\");\r\n\r\n    editForm.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n\r\n      const target = e.target.children;\r\n\r\n      const title = target.title.value;\r\n      const genre = target.genre.value;\r\n      const director = target.director.value;\r\n      const year = target.year.value;\r\n\r\n      if (title && genre && director && year) {\r\n        await putMovie(id, title, genre, director, year);\r\n\r\n        location.reload();\r\n      } else {\r\n        const moviesFromDB = await getMovies();\r\n        let currMovie;\r\n\r\n        moviesFromDB.forEach(async (el) => {\r\n          if (el.id === id) {\r\n            currMovie = el;\r\n\r\n            const updatedMovie = {\r\n              title: title || currMovie.title,\r\n              genre: genre || currMovie.genre,\r\n              director: director || currMovie.director,\r\n              year: year || currMovie.year,\r\n            };\r\n\r\n            await putMovie(\r\n              id,\r\n              updatedMovie.title,\r\n              updatedMovie.genre,\r\n              updatedMovie.director,\r\n              updatedMovie.year\r\n            );\r\n\r\n            location.reload();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"click\", editingMovie);\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (\r\n    !editMovieModal.modal.classList.contains(\"is-hidden\") &&\r\n    e.code === \"Escape\"\r\n  ) {\r\n    editMovieModal.toggle();\r\n  }\r\n});\r\n","import Movie from \"../movie\";\r\n\r\nexport async function putMovie(id, title, genre, director, year) {\r\n  return await fetch(`http://localhost:3000/movies/${id}`, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify(new Movie(title, genre, director, year)),\r\n    headers: { \"Content-Type\": \"application/json; charset=UTF-8\" },\r\n  }).then((res) => res.json());\r\n}\r\n","import { deleteMovie } from \"./services/delete-movie\";\r\n\r\nasync function deletingMovie(e) {\r\n  if (e.target.classList.contains(\"delete-movie\")) {\r\n    const id = e.target.closest(\".movies__item\").id;\r\n\r\n    await deleteMovie(id);\r\n    \r\n    location.reload();\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"click\", deletingMovie);\r\n","export async function deleteMovie(id) {\r\n  return await fetch(`http://localhost:3000/movies/${id}`, {\r\n    method: \"DELETE\",\r\n  }).then((res) => res.json());\r\n}\r\n"],"names":["$71b8d0ff64ca9fad$export$60e1c8f5f122c5ac","fetch","then","res","json","$164cf12502b3ee95$export$2e2bcd8739ae039","constructor","title","genre","director","year","$be4f266635b91511$export$2067da3b023cb800","method","body","JSON","stringify","headers","$45815515caeb23e1$export$2e2bcd8739ae039","modal","toggle","classList","document","$bcaef534012eab21$export$442f3ee99c867c02","querySelector","$bcaef534012eab21$var$openBtn","addEventListener","e","contains","code","$aa0bbffd1dda42a1$export$523fb3936f49e028","list","createMarkup","movie","item","createElement","add","id","textContent","editBtn","deleteBtn","append","renderMovies","moviesFromDB","forEach","renderAddedMovie","currMovie","$cc1158b52a3db820$export$7709ea6df55ed660","$aa0bbffd1dda42a1$var$addForm","preventDefault","target","children","value","$5cb0d661f7770473$export$568e0761fcbbe6a","$f375d14ac7a319ac$export$730b1716cbcc3184","$46680563607bf32a$var$deletingMovie","closest","location","reload","editForm","el","updatedMovie"],"version":3,"file":"index.0952654a.js.map"}